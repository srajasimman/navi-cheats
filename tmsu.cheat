% tmsu, tag

# tag file or dir
tmsu tag <file_or_dir> "<tags>"

# tag an untagged file or dir in the current dir
tmsu tag '<untagged_in_cwd>' "<tags>"

# tag a dir and its contents recursively
tmsu tag -r <dir> "<tags>"

# see values associated with a tag
tmsu values "<tags_with_values>"

# which tags does a value apply to
tmsu tags -u "<value>"

# list files or dirs with a tag
tmsu files "<tags>"

# list only files with a tag
tmsu files -f "<tags>"

; # remove tag from a file
; tmsu untag --tags="<file_tags>" "<tagged_file_or_dir>"
; echo "<tagged_file_or_dir>" | xargs tmsu untag --tags="<file_tags>"


# change a tag into a value
tmsu files -0 "<tag>" | xargs -0 tmsu tag --tags="<new_key>=<tag>" && tmsu delete "<tag>"

# frequency of tags co-occurring with another tag (tag similarity)
tmsu files -0 '<tag>' | xargs -0 tmsu tags -n never | sort | uniq -cd | sort -rhk 1

# list other files by co-occurring tags (file similarity)
tmsu tags -n never -1 <file> | xargs -I_ tmsu files _ | sort | uniq -cd | sort -rhk 1

# summarize tags by count
; https://github.com/oniony/TMSU/wiki/Tricks-and-Tips#summarize-tags-by-count
for tag in $(tmsu tags); do echo ${tag}: $(tmsu files ${tag} -c); done | sort -t: -k 2 -n -r | column

# list all tags and values
tmsu tags | xargs tmsu values

$ file_or_dir: ls .
$ file: find . -type f -exec printf '%q\n' {} \;
$ dir: find . -type d -exec printf '%q\n' {} \;
$ file_in_cwd: find . -maxdepth 1 -type f -exec printf '%q\n' {} \;
$ dir_in_cwd: find . -maxdepth 1 -type d -exec printf '%q\n' {} \;

$ tag: tmsu tags
$ new_key: tmsu tags
$ tags: tmsu tags --- --multi --expand
$ tag_with_values: tmsu tags --value --- --preview='tmsu values "{}"'
$ tags_with_values: tmsu tags --value --- --multi --expand
$ value: tmsu values
$ values: tmsu values --- --multi --expand
$ tagged_file_or_dir: tmsu files --- --multi --expand
$ file_tags: tmsu tags -n never "<tagged_file_or_dir>" --- --multi --expand
$ untagged_in_cwd: tmsu untagged -d --- --multi --expand
$ untagged_all: tmsu untagged --- --multi --expand
